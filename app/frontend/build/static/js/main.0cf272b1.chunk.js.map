{"version":3,"sources":["components/footer/Footer.jsx","components/helperfunctions/Icon.jsx","components/header/Header.jsx","components/OfficeLocations/OfficeSelector/OfficeSelector.jsx","components/helperfunctions/HelperFunctions.jsx","components/OfficeLocations/OfficeRisk/OfficeRisk.jsx","components/OfficeLocations/OfficeLocations.jsx","components/Main.js","reportWebVitals.js","index.js"],"names":["Footer","className","style","zIndex","href","target","Icon","icon","toLowerCase","width","height","viewBox","version","xmlns","id","stroke","strokeWidth","fill","fillRule","x","y","d","Header","aria-label","exact","to","Option","Select","OfficeSelector","props","locations","useState","map","data","i","value","work_location","length","defaultValue","locationType","showSearch","placeholder","optionFilterProp","onChange","e","setLocationType","filterOption","input","option","children","indexOf","loadJSONData","url","fetch","then","response","status","json","console","log","catch","err","OfficeRisk","trends","sortBy","filter","includes","location","showDetails","setShowDetails","labels","uniqBy","slope_data","risk","color","label","reverse","windowClick","event","preventDefault","document","getElementById","contains","useEffect","window","addEventListener","removeEventListener","labelList","isLast","locs","locList","onClick","OfficeLocations","work","all","setLocations","setTrends","selectedPoint","setSelectedPoint","trendsDictionary","forEach","santaClara","santaClaraRisk","santaClaraLatLong","geo_long","geo_lat","connectionData","locationCordinates","targetPosition","push","sourcePosition","sourceRisk","targetRisk","coords","locationClick","object","tooltipitem","top","left","trendsPath","selections","serverBasePath","locationsPath","title","initialViewState","longitude","latitude","zoom","pitch","bearing","controller","mapboxApiAccessToken","process","pickable","opacity","radiusMinPixels","getPosition","getRadius","getFillColor","text","textToRGB","getLineColor","onMouseEnter","Main","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0cf272b1.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by Victor Dibia / Contact : https://github.com/victordibia\n * CaseQA - CaseQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"border-gray-200 border-l-0 border-r-0 border-b-0  border w-full\">\n      <div\n        style={{ zIndex: 999000 }}\n        className=\" container-fluid text-gray-500 text-sm w-full p-2\"\n      >\n        Made with <span className=\"text-red-500\">&#9829;</span> at{\" \"}\n        <a\n          href=\"https://www.cloudera.com/products/fast-forward-labs-research.html\"\n          target=\"blank\"\n        >\n          Cloudera Fast Forward Labs\n        </a>\n        .\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nexport const Icon = ({ icon = \"info\" }) => {\n  if (icon.toLowerCase() === \"cloudera\" || icon.toLowerCase() === \"cloudera\") {\n    return (\n      <svg\n        width=\"100px\"\n        height=\"12px\"\n        viewBox=\"0 0 100 12\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <title>logo-cloudera-white</title>\n        <g\n          id=\"Symbols\"\n          stroke=\"none\"\n          strokeWidth=\"1\"\n          fill=\"none\"\n          fillRule=\"evenodd\"\n        >\n          <g id=\"product-logos/cloudera-logo/cloudera-white\">\n            <rect fill=\"#000000\" x=\"0\" y=\"0\" width=\"100\" height=\"12\"></rect>\n            <path\n              d=\"M45.088964,6.679 C45.088964,8.497 44.029313,9.594 42.5393055,9.594 C41.0492981,9.594 39.9896471,8.497 39.9896471,6.679 L39.9896471,0.262 L37.2907849,0.262 L37.2907849,6.576 C37.2907849,9.901 39.410087,12 42.5393055,12 C45.6675091,12 47.7868112,9.901 47.7868112,6.576 L47.7868112,0.262 L45.088964,0.262 L45.088964,6.679 Z M95.4670483,7.266 L93.846107,3.245 L92.2251657,7.266 L95.4670483,7.266 Z M100,11.738 L97.2706881,11.738 L96.325731,9.396 L91.366483,9.396 L90.4225409,11.738 L87.693229,11.738 L92.6108624,0.262 L95.027557,0.262 L100,11.738 Z M83.9956152,4.221 C83.9956152,3.714 83.789572,3.24 83.4769546,2.969 C83.1237376,2.663 82.6162419,2.504 81.9108229,2.504 L79.3317296,2.504 L79.3317296,5.95 L81.9189428,5.95 C82.6111669,5.95 83.1034378,5.796 83.4525948,5.5 C83.781452,5.221 83.9956152,4.742 83.9956152,4.221 L83.9956152,4.221 Z M83.7296875,7.877 L87.0527694,11.738 L83.9113709,11.738 L80.8176771,8.115 L79.3317296,8.115 L79.3317296,11.738 L76.687677,11.738 L76.687677,0.262 L82.0590116,0.262 C83.556124,0.262 84.6553597,0.622 85.444008,1.286 C86.2326563,1.95 86.6914325,2.97 86.6914325,4.184 C86.6914325,5.704 86.035748,7.283 83.7296875,7.877 L83.7296875,7.877 Z M15.8886757,0.262 L13.1908285,0.262 L13.1908285,11.738 L21.3533896,11.738 L21.3533896,9.403 L15.8886757,9.403 L15.8886757,0.262 Z M6.2361073,9.576 C4.24367914,9.576 2.79934635,8.027 2.79934635,5.999 C2.79934635,3.971 4.24367914,2.425 6.2361073,2.425 C7.1952742,2.425 7.98696751,2.761 8.67919166,3.407 L10.417872,1.694 C9.36735585,0.626 7.90170823,0 6.20667255,0 C2.70190717,0 0,2.636 0,6 C0,9.365 2.70190717,12 6.20667255,12 C7.97783259,12 9.52873948,11.295 10.5853456,10.111 L8.85580017,8.407 C8.15748607,9.167 7.32417811,9.576 6.2361073,9.576 L6.2361073,9.576 Z M59.409478,6 C59.409478,3.928 57.8900358,2.556 55.6276199,2.556 L53.84834,2.556 L53.84834,9.444 L55.6276199,9.444 C57.8900358,9.444 59.409478,8.072 59.409478,6 L59.409478,6 Z M62.2098393,6 C62.2098393,9.432 59.640896,11.738 55.8184383,11.738 L51.1504928,11.738 L51.1504928,0.262 L55.7047593,0.262 C59.528232,0.262 62.2098393,2.568 62.2098393,6 L62.2098393,6 Z M31.8443409,6.018 C31.8443409,3.925 30.4538027,2.407 28.4918242,2.407 C26.5318758,2.407 25.1403226,3.925 25.1403226,6.018 C25.1403226,8.09 26.5318758,9.594 28.4918242,9.594 C30.4538027,9.594 31.8443409,8.09 31.8443409,6.018 L31.8443409,6.018 Z M34.6436873,6.017 C34.6436873,9.372 32.065609,12 28.4918242,12 C24.9190544,12 22.3409762,9.372 22.3409762,6.017 C22.3409762,2.643 24.9190544,0 28.4918242,0 C32.065609,0 34.6436873,2.643 34.6436873,6.017 L34.6436873,6.017 Z M63.435949,11.738 L73.5269937,11.738 L73.5269937,9.366 L65.0325305,9.366 C64.6539387,10.265 64.1119333,11.058 63.435949,11.738 L63.435949,11.738 Z M72.0928108,7.137 L72.0928108,4.788 L65.5846858,4.788 C65.6415253,5.19 65.680095,5.6 65.680095,6.027 C65.680095,6.408 65.6506603,6.776 65.6070156,7.137 L72.0928108,7.137 Z M63.3070451,0.262 L73.4742141,0.262 L73.4742141,2.634 L64.9878709,2.634 C64.5859342,1.733 64.0134791,0.941 63.3070451,0.262 L63.3070451,0.262 Z\"\n              id=\"cloudera\"\n              fill=\"#FFFFFF\"\n            ></path>\n          </g>\n        </g>\n      </svg>\n    );\n  }\n};\n","/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by / Contact : https://github.com/victordibia\n * NeuralQA - NeuralQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"../helperfunctions/Icon\";\nimport \"./header.css\";\n\nconst Header = () => {\n  const appName = \"Covid Advisor\";\n  const appDescription = \"Dataset for Automated Generation of Visualizations\";\n  return (\n    <div>\n      <div className=\"headermain\" aria-label={appDescription}>\n        <div className=\"  w-full  container-fluid   headerrow pl-1 \">\n          <div className=\"flex  h-full\">\n            <div className=\"h-full   flex flex-col justify-center mr-2 ml-2  \">\n              <a href={process.env.PUBLIC_URL + \"/#\"}>\n                <Icon icon=\"cloudera\" />\n              </a>\n            </div>\n            <div className=\"apptitle  flex flex-col justify-center  mr-1\">\n              <div className=\"text-white  font-semibold text-sm  iblock mr-2 ml-1\">\n                {\" \"}\n                {appName}{\" \"}\n              </div>\n            </div>\n            <div className=\"h-full   flex  text-sm  navbarlinks \">\n              <NavLink exact to=\"/\">\n                Office Locations\n              </NavLink>\n            </div>\n\n            {/* <div className=\"h100   flex flexjustifycenter  navbarlinks \">\n              <NavLink exact to=\"/embeddings\">\n                Embeddings{\" \"}\n              </NavLink>\n            </div>\n            <div className=\"h100   flex flexjustifycenter  navbarlinks \">\n              <NavLink exact to=\"/livesearch\">\n                Live Search{\" \"}\n              </NavLink>\n            </div> */}\n          </div>\n        </div>\n      </div>\n      <div></div>\n      <div className=\"headerboost\"> </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Select } from \"antd\";\n// import { loadJSONData } from \"../../helperfunctions/HelperFunctions\";\nconst { Option } = Select;\nconst OfficeSelector = (props) => {\n  const locations = props.locations || [];\n  const [selectedLocation, setselectedLocation] = useState(0);\n\n  const workLocationList = locations.map((data, i) => {\n    return (\n      <Option value={data.work_location} key={\"locrow\" + i}>\n        {\" \"}\n        {data.work_location}{\" \"}\n      </Option>\n    );\n  });\n  return (\n    locations.length > 0 && (\n      <div className=\"mt-2   inline-block rounded-sm   bg-white p-3  bg-opacity-90\">\n        <div className=\"mb-2 text-sm font-semibold\">\n          {\" \"}\n          Location Type ({locations.length}){\" \"}\n        </div>\n        <div className=\"mb-2\"> </div>\n        {/* <Select\n          defaultValue={locations[selectedLocation].work_location}\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Select a location\"\n          optionFilterProp=\"children\"\n          // onChange={onChange}\n          // onFocus={onFocus}\n          // onBlur={onBlur}\n          // onSearch={onSearch}\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          {workLocationList}\n        </Select> */}\n\n        <div className=\"mt-2\">\n          <Select\n            defaultValue={props.locationType}\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a location\"\n            optionFilterProp=\"children\"\n            onChange={(e) => {\n              props.setLocationType(e);\n            }}\n            // onFocus={onFocus}\n            // onBlur={onBlur}\n            // onSearch={onSearch}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"work\">Work Locations</Option>\n            <Option value=\"all\">All Employee Locations</Option>\n          </Select>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default OfficeSelector;\n","export function abbreviateString(value, maxLength) {\n  if (value.length <= maxLength) {\n    return value;\n  } else {\n    let retval = value.substring(0, maxLength) + \" ..\";\n    return retval;\n  }\n}\n\nfunction intlFormat(num) {\n  return new Intl.NumberFormat().format(Math.round(num * 10) / 10);\n}\nexport function makeFriendly(num) {\n  if (num < 1 && num > 0) {\n    return num;\n  }\n  if (Math.abs(num) >= 1000000) return intlFormat(num / 1000000) + \"M\";\n  if (Math.abs(num) >= 1000) return intlFormat(num / 1000) + \"k\";\n  return intlFormat(num);\n}\n\nexport function loadJSONData(url) {\n  return fetch(url)\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return;\n      }\n      // Examine the text in the response\n      //    response.text().then(function(data){\n      //        console.log(data)\n      //    })\n      return response.json().then(function (data) {\n        return data;\n      });\n    })\n    .catch(function (err) {\n      console.log(\"Fetch Error :-S\", err);\n    });\n}\n\nexport function postJSONData(url, postData) {\n  return fetch(url, {\n    method: \"post\",\n    body: JSON.stringify(postData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(response.status);\n      }\n      return response.json().then(function (data) {\n        return data;\n      });\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nexport function uploadFile(url, postData) {\n  return fetch(url, {\n    method: \"post\",\n    body: postData,\n  })\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(response.status);\n      }\n      return response.json().then(function (data) {\n        return data;\n      });\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nexport function getFileFromUrl(url, defaultType = \"image/jpeg\") {\n  return fetch(url, {})\n    .then(function (response) {\n      if (response.status !== 200) {\n        console.log(\n          \"Looks like there was a problem. Status Code: \" + response.status\n        );\n        return Promise.reject(response.status);\n      }\n      return response.blob().then(function (data) {\n        return new File(\n          [data],\n          \"File : \" + response.headers.get(\"content-type\"),\n          {\n            type: response.headers.get(\"content-type\") || defaultType,\n          }\n        );\n      });\n    })\n    .catch(function (err) {\n      return Promise.reject(err);\n    });\n}\n\nexport function getElement(id) {\n  return document.getElementById(id);\n}\n\nexport function ColorArray() {\n  let colorArray = [\n    \"#1f78b4\",\n    \"#b2df8a\",\n    \"#33a02c\",\n    \"#fb9a99\",\n    \"#e31a1c\",\n    \"#fdbf6f\",\n    \"#ff7f00\",\n    \"#6a3d9a\",\n    \"#cab2d6\",\n    \"#ffff99\",\n    \"#8fff4f\",\n  ];\n  return colorArray;\n}\n\nexport function textToRGB(text) {\n  let color = [0, 0, 0];\n  switch (text) {\n    case \"red\":\n      color = [239, 68, 68];\n      break;\n    case \"yellow\":\n      color = [245, 158, 11];\n      break;\n    case \"green\":\n      color = [16, 185, 129];\n      break;\n    default:\n      color = [0, 0, 0];\n  }\n  return color;\n}\n\nexport function ColorArrayRGB() {\n  let colorArray = [\n    [141, 211, 199],\n    [255, 255, 179],\n    [190, 186, 218],\n    [251, 128, 114],\n    [128, 177, 211],\n    [253, 180, 98],\n    [179, 222, 105],\n    [252, 205, 229],\n    [188, 128, 189],\n    [204, 235, 197],\n  ];\n  return colorArray;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Select } from \"antd\";\nimport sortBy from \"lodash/sortBy\";\nimport uniqBy from \"lodash/uniqBy\";\n// import { loadJSONData } from \"../../helperfunctions/HelperFunctions\";\nconst { Option } = Select;\n\nconst OfficeRisk = (props) => {\n  const locations = props.locations.map((x) => x.work_location);\n  const trends = sortBy(\n    props.trends.filter((x) => locations.includes(x.location)),\n    \"slope_data.slope\"\n  );\n\n  // trends = trends;\n  const [selectedLocation, setselectedLocation] = useState(0);\n  const [showDetails, setShowDetails] = useState(false);\n  const labels = uniqBy(\n    trends.map((x) => x.slope_data.risk),\n    (e) => e.color + e.label\n  ).reverse();\n\n  function windowClick(event) {\n    event.preventDefault();\n    const riskdiv = document.getElementById(\"mainriskdiv\");\n\n    if (!riskdiv.contains(event.target)) {\n      setShowDetails(false);\n    }\n  }\n\n  useEffect(() => {\n    // initiate the event handler\n    window.addEventListener(\"click\", windowClick, false);\n\n    // this will clean up the event every time the component is re-rendered\n    return function cleanup() {\n      window.removeEventListener(\"click\", windowClick, false);\n    };\n  }, []);\n\n  const labelList = labels.map((data, i) => {\n    const isLast = i === labels.length - 1;\n    const locs = trends.filter((x) => x.slope_data.risk.color === data.color);\n    const locList = locs.map((data, i) => {\n      return (\n        <div\n          className=\"text-sm border p-1 pl-2 mb-1 cursor-pointer rounded-sm hover:bg-gray-100\"\n          key={\"locrow\" + i}\n        >\n          <div\n            className={\n              \"w-2.5 h-2.5 inline-block mr-2 \" +\n              \"bg-\" +\n              data.slope_data.risk.color +\n              \"-500\"\n            }\n          >\n            {\" \"}\n          </div>\n          {data.location}{\" \"}\n        </div>\n      );\n    });\n    return (\n      <div\n        className={\"p3 flex-1 \" + (isLast ? \" \" : \" pr-3\")}\n        key={\"labelrow\" + i}\n      >\n        <div\n          className={\n            \"p-1 pl-2 pr-2  text-white whitespace-nowrap font-semibold rounded-sm mb-2   \" +\n            \"bg-\" +\n            data.color +\n            \"-500\"\n          }\n        >\n          {\" \"}\n          {data.label} ({locs.length})\n        </div>\n        {showDetails && <div>{locList}</div>}\n      </div>\n    );\n  });\n\n  const trendList = trends.map((data, i) => {\n    return (\n      <div className=\"text-sm\" key={\"locrow\" + i}>\n        <div\n          className={\n            \"w-2.5 h-2.5 inline-block mr-2 \" +\n            \"bg-\" +\n            data.slope_data.risk.color +\n            \"-500\"\n          }\n        >\n          {\" \"}\n        </div>\n        {data.location}{\" \"}\n      </div>\n    );\n  });\n\n  function clickShowMore(e) {\n    setShowDetails(!showDetails);\n  }\n\n  function divMouseLeave(e) {\n    setShowDetails(false);\n  }\n\n  return (\n    trends.length > 0 && (\n      <div\n        id=\"mainriskdiv\"\n        // onMouseLeave={divMouseLeave}\n        className={\n          \"riskdiv overflow-auto mt-3 bg-white  rounded-sm  bg-opacity-90\"\n        }\n      >\n        <div className=\" inline-block    p-3 \">\n          <div className=\"mb-2  flex\">\n            <span className=\"font-semibold flex-grow \">\n              {\" \"}\n              Office Location Risk\n            </span>\n            <span\n              onClick={clickShowMore}\n              className=\"text-xs mt-1 mr-3 hover:underline pb-1 cursor-pointer\"\n            >\n              {\" \"}\n              {showDetails ? \"< Hide Details\" : \"Show Details > \"}\n            </span>\n          </div>\n          <div className=\"flex\"> {labelList} </div>\n          <div className=\"  overflow-auto\"></div>\n        </div>\n        <div className=\"bg-red-500 bg-green-500 bg-yellow-500 border-red-500  border-yellow-500 border-green-500\"></div>\n      </div>\n    )\n  );\n};\n\nexport default OfficeRisk;\n","import React, { useEffect, useState } from \"react\";\nimport \"./officelocation.css\";\n\nimport DeckGL from \"@deck.gl/react\";\nimport { ScatterplotLayer, LineLayer, ArcLayer } from \"@deck.gl/layers\";\nimport { StaticMap } from \"react-map-gl\";\nimport { MapView } from \"@deck.gl/core\";\nimport OfficeSelector from \"./OfficeSelector/OfficeSelector\";\nimport { Popover } from \"antd\";\n\nimport { loadJSONData, textToRGB } from \"../helperfunctions/HelperFunctions\";\nimport OfficeRisk from \"./OfficeRisk/OfficeRisk\";\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst OfficeLocations = (props) => {\n  const [locations, setLocations] = useState({ work: [], all: [] });\n  const [trends, setTrends] = useState([]);\n  const [locationType, setLocationType] = useState(\"work\");\n  const [selectedPoint, setSelectedPoint] = useState({});\n\n  // Viewport settings\n\n  const INITIAL_VIEW_STATE = {\n    longitude: 18.419257623928356,\n    latitude: 47.22416217215195,\n    zoom: 1.3,\n    pitch: 10,\n    bearing: 0,\n  };\n\n  let trendsDictionary = {};\n  trends.forEach((x) => {\n    trendsDictionary[x.location] = x.slope_data.risk;\n  });\n\n  const santaClara =\n    locations[locationType].filter((x) =>\n      x.work_location.includes(\"Santa Clara\")\n    )[0] || {};\n\n  const santaClaraRisk = trendsDictionary[\"US-California-Santa Clara (HQ)\"];\n  const santaClaraLatLong = [santaClara.geo_long, santaClara.geo_lat];\n  // Data to be used by the LineLayer\n  const lineData = [\n    {\n      sourcePosition: [-121.9552356, 37.3541079],\n      targetPosition: [-122.41669, 37.781],\n    },\n  ];\n\n  // console.log(locations[locationType]);\n  let connectionData = [];\n  let locationCordinates = [];\n  locations[locationType].forEach((x) => {\n    const targetPosition = [x.geo_long, x.geo_lat];\n    connectionData.push({\n      sourcePosition: santaClaraLatLong,\n      targetPosition: targetPosition,\n      sourceRisk: santaClaraRisk,\n      targetRisk: trendsDictionary[x.work_location],\n    });\n\n    locationCordinates.push({\n      coords: targetPosition,\n      risk: trendsDictionary[x.work_location],\n      location: x.work_location,\n    });\n  });\n\n  const locationsData = [\n    [-121.9552356, 37.35410793],\n    [-122.41669, 37.781],\n  ];\n\n  useEffect(() => {\n    const trendsPath = props.selections.serverBasePath + \"/trends\";\n    const locationsPath = props.selections.serverBasePath + \"/locations\";\n    console.log(\"Trends and Locations Data requested ..\");\n\n    let locPromise = loadJSONData(locationsPath);\n    locPromise\n      .then(function (data) {\n        if (data) {\n          setLocations(data);\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Failed to fetch locations data.\", err);\n      });\n\n    let trendPromise = loadJSONData(trendsPath);\n    trendPromise\n      .then(function (data) {\n        if (data) {\n          setTrends(data);\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Failed to fetch trends data.\", err);\n      });\n  }, [props.selections.serverBasePath]);\n\n  useEffect(() => {\n    document.title = `Cloudera Covid Advisor | Locations `;\n  }, []);\n\n  // console.log(locations[locationType]);\n  function locationClick(e) {\n    console.log(\"location clickedd\", e.object);\n    const tooltipitem = document.getElementById(\"tooltipitem\");\n    tooltipitem.style.top = e.y - 10 + \"px\";\n    tooltipitem.style.left = e.x + 15 + \"px\";\n    setSelectedPoint(e.object);\n  }\n\n  return (\n    <div className=\"\">\n      <div className=\"  \">\n        <DeckGL initialViewState={INITIAL_VIEW_STATE} controller={true}>\n          <MapView id=\"map\" width=\"100%\" controller={true}>\n            <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN} />\n          </MapView>\n\n          <ScatterplotLayer\n            id=\"locations-scatter-plot\"\n            data={locationCordinates}\n            pickable={true}\n            opacity={0.8}\n            radiusMinPixels={8}\n            getPosition={(d) => d.coords}\n            getRadius={(d) => 1900}\n            getFillColor={(d) => textToRGB(d.risk?.color)}\n            getLineColor={(d) => [0, 0, 0]}\n            onClick={locationClick}\n            onMouseEnter={locationClick}\n          />\n          {/* <LineLayer id=\"line-layer\" data={lineData} /> */}\n          {/* <ArcLayer\n            id=\"connection-line-layer\"\n            data={connectionData}\n            // greatCircle={true}\n            pickable\n            getWidth={1}\n            // getSourcePosition={(d) => d.sourcePosition}\n            // getTargetPosition={(d) => d.targetPosition}\n            getSourceColor={(d) => textToRGB(d.sourceRisk.color)}\n            getTargetColor={(d) => textToRGB(d.targetRisk.color)}\n          /> */}\n        </DeckGL>\n      </div>\n\n      <div\n        id=\"tooltipitem\"\n        className=\"absolute -left-10 p-3 shadow rounded-sm bg-white\"\n      >\n        {\" \"}\n        <div\n          className={\"h-2 mb-1 bg-\" + selectedPoint.risk?.color + \"-500\"}\n        ></div>\n        {selectedPoint.location}\n      </div>\n\n      <div className=\"absolute ml-2 \">\n        <OfficeSelector\n          locations={locations[locationType]}\n          trends={trends}\n          setLocationType={setLocationType}\n          locationType={locationType}\n        />\n        <OfficeRisk locations={locations[locationType]} trends={trends} />\n      </div>\n    </div>\n  );\n};\n\n// const locationsLayer = new ScatterplotLayer({\n//   id: \"locations-scatterplot-layer\",\n//   locationsData,\n//   pickable: true,\n//   opacity: 0.8,\n//   stroked: true,\n//   filled: true,\n//   radiusScale: 6,\n//   radiusMinPixels: 1,\n//   radiusMaxPixels: 100,\n//   lineWidthMinPixels: 1,\n//   getPosition: (d) => d,\n//   getRadius: (d) => 100,\n//   getFillColor: (d) => [255, 140, 0],\n//   getLineColor: (d) => [0, 0, 0],\n// });\n\nexport default OfficeLocations;\n","import \"./main.css\";\n// import \"./main.scss\";\nimport \"antd/dist/antd.css\";\n\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Footer from \"./footer/Footer\";\nimport Header from \"./header/Header\";\nimport OfficeLocations from \"./OfficeLocations/OfficeLocations\";\n\nfunction Main() {\n  // const serverBasePath = window.location.protocol + \"//\" + window.location.host;\n  const serverBasePath = \"http://localhost:5000\";\n  const selections = { serverBasePath: serverBasePath };\n  return (\n    <HashRouter>\n      <div className=\"flex flex-col h-screen  \">\n        <Header />\n        <main className=\"container-fluid w-full   flex-grow p-2\">\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <OfficeLocations {...props} selections={selections} />\n            )}\n          />\n        </main>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./components/Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}